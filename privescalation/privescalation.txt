The vulnerability arises due to the absence of adequate user verification or authentication measures. In the insecure setup, user authentication is solely based on input provided by the users themselves. Consequently, if an individual acquires an admin's userID, they can gain administrative privileges without any verification of their actual identity, leading to a 'privilege escalation' scenario. To address this issue, the secure approach employs sessions to authenticate user identities, thereby mitigating the risk. It verifies a user's identity by retrieving the userID from the session and confirms whether the user's role is 'admin' before granting permissions to modify user roles. To further safeguard against such vulnerabilities, input sanitization can be implemented as an additional security measure. However, a more robust solution involves the use of secure sessions and cookies to enhance authentication protocols.
